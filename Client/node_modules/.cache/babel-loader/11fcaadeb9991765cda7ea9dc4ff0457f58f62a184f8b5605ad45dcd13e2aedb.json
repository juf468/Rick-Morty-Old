{"ast":null,"code":"var _jsxFileName = \"/Users/juliafranchi/Documents/code/rick-and-morty/Client/src/components/Form/Form.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport validation from './Validation';\nimport Style from './Form.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = _ref => {\n  _s();\n  let {\n    login\n  } = _ref;\n  //paso la funcion loging por props\n  const [userData, setUserData] = useState({\n    username: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({\n    username: '',\n    password: ''\n  });\n  const handleInputChange = event => {\n    const property = event.target.name;\n    const value = event.target.value;\n    setUserData({\n      ...userData,\n      [property]: value\n    });\n    validation({\n      ...userData,\n      [property]: value\n    }, errors, setErrors); //ejecuto validation luego de los cambios, argumentamos la misma info que mandamos a validar\n  };\n\n  const submitHandler = event => {\n    //recibe el evento\n    event.preventDefault();\n    login(userData); //ejecuto la funcion login que contiene userdata\n  }; // para que no recargue la pag\n  //ONSUBMITH RECIBE EL EVENTO DEL BOTON X SUBMITHANDLER\n  //ONSUBMIT Y PREVENTDEFAULT SON SOLO PARA HACER FORMULARIOS!!\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    className: Style.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: Style.label,\n        htmlFor: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: Style.input,\n        type: \"text\",\n        name: \"username\",\n        value: userData.username,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white'\n        },\n        children: errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: Style.label,\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: Style.input,\n        type: \"text\",\n        name: \"password\",\n        value: userData.password,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white'\n        },\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: Style.button,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n};\n_s(Form, \"O9IReGyO3soTPqUXpO+2OklDqPg=\");\n_c = Form;\nexport default Form;\n//porque le agregue name a los inputs? y porque\n// haciendo usestate agregue el value a los inputs\n// tengo los inputs bindeados al estado=>>> explicar xd\n// x ahora solo con el usestate no puedo escribir en los inputs porque son props vacias\n// con el handlechange le agrego los onchenge a los inputs =>> que es un onchage del input\n//  agrego un const property porque quiero modificar la propiedad =>> event.target.name =>> que es target? el event. target es el imput?\n// no entiendo para que el conts value\n// por ultimo en  handleinputchange seteamos el estado donde hacemo una copia de userdata ({..userdata}) donde modificamos la property ({...userdata,[property]})\n//=> y le damos el valor de value ({...userdata,[property]:value}) NO ENTENDI DESDE LA PARTE DEL VALUE\n//creo otro usestate para los errores de password y username, x ello dentro del obj tendra dentro dichas key-value\n\n//validation creo un p que muestre los errors.username, como hace para no mostrarlo siempre, es por la funcion?\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","validation","Style","jsxDEV","_jsxDEV","Form","_ref","_s","login","userData","setUserData","username","password","errors","setErrors","handleInputChange","event","property","target","name","value","submitHandler","preventDefault","onSubmit","className","container","children","label","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","input","type","onChange","style","color","button","_c","$RefreshReg$"],"sources":["/Users/juliafranchi/Documents/code/rick-and-morty/Client/src/components/Form/Form.jsx"],"sourcesContent":["import { useState } from 'react';\nimport validation from './Validation';\nimport Style from './Form.module.css';\n\nconst Form = ({ login }) => {\n\t//paso la funcion loging por props\n\tconst [userData, setUserData] = useState({\n\t\tusername: '',\n\t\tpassword: '',\n\t});\n\n\tconst [errors, setErrors] = useState({\n\t\tusername: '',\n\t\tpassword: '',\n\t});\n\n\tconst handleInputChange = (event) => {\n\t\tconst property = event.target.name;\n\t\tconst value = event.target.value;\n\n\t\tsetUserData({ ...userData, [property]: value });\n\t\tvalidation({ ...userData, [property]: value }, errors, setErrors); //ejecuto validation luego de los cambios, argumentamos la misma info que mandamos a validar\n\t};\n\tconst submitHandler = (event) => {\n\t\t//recibe el evento\n\t\tevent.preventDefault();\n\t\tlogin(userData); //ejecuto la funcion login que contiene userdata\n\t}; // para que no recargue la pag\n\t//ONSUBMITH RECIBE EL EVENTO DEL BOTON X SUBMITHANDLER\n\t//ONSUBMIT Y PREVENTDEFAULT SON SOLO PARA HACER FORMULARIOS!!\n\treturn (\n\t\t<form onSubmit={submitHandler} className={Style.container}>\n\t\t\t<div>\n\t\t\t\t<label className={Style.label} htmlFor=\"username\">\n\t\t\t\t\tUsername:\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\tclassName={Style.input}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"username\"\n\t\t\t\t\tvalue={userData.username}\n\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t/>\n\t\t\t\t<p style={{ color: 'white' }}>{errors.username}</p>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<label className={Style.label} htmlFor=\"password\">\n\t\t\t\t\tPassword:\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\tclassName={Style.input}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tvalue={userData.password}\n\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t/>\n\t\t\t\t<p style={{ color: 'white' }}>{errors.password}</p>\n\t\t\t</div>\n\t\t\t<button className={Style.button}>Login</button>\n\t\t</form>\n\t);\n};\n\nexport default Form;\n//porque le agregue name a los inputs? y porque\n// haciendo usestate agregue el value a los inputs\n// tengo los inputs bindeados al estado=>>> explicar xd\n// x ahora solo con el usestate no puedo escribir en los inputs porque son props vacias\n// con el handlechange le agrego los onchenge a los inputs =>> que es un onchage del input\n//  agrego un const property porque quiero modificar la propiedad =>> event.target.name =>> que es target? el event. target es el imput?\n// no entiendo para que el conts value\n// por ultimo en  handleinputchange seteamos el estado donde hacemo una copia de userdata ({..userdata}) donde modificamos la property ({...userdata,[property]})\n//=> y le damos el valor de value ({...userdata,[property]:value}) NO ENTENDI DESDE LA PARTE DEL VALUE\n//creo otro usestate para los errores de password y username, x ello dentro del obj tendra dentro dichas key-value\n\n//validation creo un p que muestre los errors.username, como hace para no mostrarlo siempre, es por la funcion?\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}